{"version":3,"file":"static/js/68.340739a7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ContainerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  width: 600px;\n  color: white;\n  padding: 20px;\n  gap: 15px;\n  box-shadow: 4px 4px 23px 12px rgba(0, 7, 236, 0.35);\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  font-size: 18px;\n  font-weight: bold;\n  color: white;\n  &:first-child {\n    margin-right: 50px;\n  }\n\n  &:hover {\n    color: #76c70f;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 8px 12px;\n  font-size: 20px;\n  border: 2px solid white;\n  cursor: pointer;\n  border-radius: 10px;\n  outline: none;\n  background-color: transparent;\n  color: white;\n  width: 300px;\n\n  &:hover,\n  &:focus {\n    box-shadow: 4px 4px 23px 12px rgba(0, 7, 236, 0.35);\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 10px;\n  min-width: 100px;\n  min-height: 40px;\n  border: 1px solid black;\n  border-radius: 8px;\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: background-color 0.5s;\n  &:hover {\n    background-color: blue;\n  }\n  &:hover,\n  &:focus {\n    box-shadow: 4px 4px 23px 12px rgba(0, 7, 236, 0.35);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contact.contacts;\n\nexport const selectStatusFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contact.isLoading;\n\nexport const selectError = state => state.contact.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ErrorMessage, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ContainerForm, Input, Label, StyledBtn } from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst contactFormSchema = Yup.object().shape({\n  name: Yup.string().required('This field is required!'),\n  number: Yup.string()\n    .matches(/^[0-9-+]+$/, 'Please enter digits, \"-\" or \"+\"')\n    .required('This field is required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactFormSchema}\n      onSubmit={(values, actions) => {\n        if (\n          contacts.some(\n            contact => contact.name.toLowerCase() === values.name.toLowerCase()\n          )\n        ) {\n          return alert(`${values.name} is already in contacts`);\n        }\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <ContainerForm>\n          <h1>Phonebook</h1>\n          <Label>\n            Name\n            <Input name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n          <Label>\n            Number\n            <Input type=\"tel\" name=\"number\" required />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </Label>\n\n          <StyledBtn type=\"submit\">Add contact</StyledBtn>\n        </ContainerForm>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n  width: 300px;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 5px;\n  min-width: 100px;\n  min-height: 40px;\n  border: 1px solid black;\n  border-radius: 8px;\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: background-color 0.5s;\n  &:hover {\n    background-color: blue;\n  }\n  &:hover,\n  &:focus {\n    box-shadow: 4px 4px 23px 12px rgba(0, 7, 236, 0.35);\n  }\n`;\n\nexport const Item = styled.li`\n  font-size: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { StyledList, StyledBtn, Item } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contactsFilter = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <StyledList>\n      {isLoading && <b>Loading....</b>}\n      {error && <b>Some Error</b>}\n      {contactsFilter.map(contact => {\n        const { id, name, number } = contact;\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <StyledBtn\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </StyledBtn>\n          </Item>\n        );\n      })}\n    </StyledList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 100px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  width: 600px;\n  color: white;\n  padding: 20px;\n  gap: 15px;\n  box-shadow: 4px 4px 23px 12px rgba(0, 7, 236, 0.35);\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  font-size: 20px;\n  border: 2px solid white;\n  cursor: pointer;\n  border-radius: 10px;\n  outline: none;\n  background-color: transparent;\n  color: white;\n  width: 300px;\n\n  &:hover,\n  &:focus {\n    box-shadow: 4px 4px 23px 12px rgba(0, 7, 236, 0.35);\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: bold;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Input, Label } from './Filter.styled';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contactFilter = evt => dispatch(setFilter(evt.target.value));\n\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <Input type=\"string\" name=\"filter\" onChange={contactFilter}></Input>\n      </Label>\n    </div>\n  );\n};\n","import { MainContainer } from 'components/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContainerFilter } from 'components/Filter/Filter.styled';\n\nexport default function Contacts() {\n  return (\n    <MainContainer>\n      <ContactForm />\n      <ContainerFilter>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </ContainerFilter>\n    </MainContainer>\n  );\n}\n"],"names":["ContainerForm","styled","Input","NavLink","Field","Label","StyledBtn","selectContacts","state","contact","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","name","toLowerCase","includes","contactFormSchema","Yup","shape","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","some","alert","addContact","resetForm","component","type","StyledList","Item","ContactList","contactsFilter","useEffect","fetchContacts","map","id","onClick","deleteContact","ContainerFilter","Filter","onChange","evt","setFilter","target","value","Contacts"],"sourceRoot":""}